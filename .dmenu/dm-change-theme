#!/bin/bash
##____  _                      _      
#|  _ \| |__   ___   ___ _ __ (_)_  __
#| |_) | '_ \ / _ \ / _ \ '_ \| \ \/ /
#|  __/| | | | (_) |  __/ | | | |>  < 
#|_|   |_| |_|\___/ \___|_| |_|_/_/\_\
#                                     
#This script will make it easy to change the theme of your system when using a standalone windowmanager. something like qtile for example
#It supports rofi, kitty, conky, qtile, nvim

source $HOME/.dmenu/.config/dm-script.conf

#Declare are the themes thats available
declare -a options=(
"iceberg"
"nord"
"dracula"
"darkaneon"
)

#Declares some path variables
qtile_path="$HOME/.config/qtile"
kitty_path="$HOME/.config/kitty"
rofi_path="$HOME/.config/rofi"
conky_path="$HOME/.config/conky"
nvim_path="$HOME/.config/nvim/vim-plug"
nvim_path_init="$HOME/.config/nvim"
gtk3_path="$HOME/.config/gtk-3.0"
vifm_path="$HOME/.config/vifm"

#Gets the current qttile theme
for opt in $(printf '%s\n' "${options[@]}") ; do
  
   current_qtile_theme=$(cat $qtile_path/config.py | head -n30 | grep $opt | awk '{print $2}' | sed 's/=//g' )
  
  [ -z "$current_qtile_theme" ] || break

done

#Gets the current nvim theme
for opt in $(printf '%s\n' "${options[@]}") ; do

   current_nvim_theme=$(nl -b a $nvim_path/plugins.vim | grep -vi "Plug" | grep "$opt" )
   
   [ -z "$current_nvim_theme" ] || break

done

#Seperates the number and theme name
current_nvim_theme_line=$(echo $current_nvim_theme | awk '{print $1}' | awk '{print $1 "s"}')
current_nvim_theme=$(echo $current_nvim_theme | awk '{print $NF}')


#Gets the current theme name for my nvim lightline bar
for opt in $(printf '%s\n' "${options[@]}") ; do

  current_line_nvim=$(cat $nvim_path_init/init.vim |  grep "$opt" | awk '{print $NF}' | sed -e 's/,//g' -e "s/'//g") 
  
  [ -z "$current_line_nvim" ] || break

done

#Prompt you to choose theme
choice=$(printf '%s\n' "${options[@]}" | run -p "Choose your theme" )

#Exit if choice is empty
[ -z $choice ] && exit


#Gets current my gtk themes 
current_gtk_theme=$(cat $HOME/.gtkrc-2.0 | grep "gtk-theme-name" | awk -F = '{print $2}' | sed 's/"//g')
current_icon_theme=$(cat $HOME/.gtkrc-2.0 | grep "gtk-icon-theme-name" | awk -F = '{print $2}' | sed 's/"//g')
current_gtk3_theme=$(cat $gtk3_path/settings.ini | grep "gtk-theme-name" | awk -F = '{print $2}' | sed 's/"//g')
current_gtk3_icon_theme=$(cat $gtk3_path/settings.ini | grep "gtk-theme-name" | awk -F = '{print $2}' | sed 's/"//g')

#Gets my current vifm theme
current_vifm_theme=$(cat $vifm_path/vifmrc | grep colorscheme | awk '{print $NF}')

#Gets my current rofi theme
current_rofi_theme=$(cat $rofi_path/config.rasi | grep "^@theme" | awk -F / '{print $NF}' | sed -e 's/sidebar-//g' -e 's/.rasi"//g')

#Change the begining letter of the theme name to capital
make_capital=$(echo $choice | sed -e "s/\b\(.\)/\u\1/g")

#Updates rofi theme
sed -i "s|$current_rofi_theme|$choice|g" $rofi_path/config.rasi

#Updates gtk and icon theme
sed -i "s|$current_gtk_theme|$make_capital|g"  $HOME/.gtkrc-2.0
sed -i "s|$current_gtk3_theme|$make_capital|g" $gtk3_path/settings.ini 

#Updates my vifm theme
sed -i "s|$current_vifm_theme|$choice|g" $vifm_path/vifmrc

#Updates nvim lightline theme
sed -i "s|$current_line_nvim|$choice|g" $nvim_path_init/init.vim

#Updates nvim colorscheme
sed -i "$current_nvim_theme_line|$current_nvim_theme|$choice|g" $nvim_path/plugins.vim

#Unlinks current kitty and conky theme
unlink $kitty_path/theme.conf
unlink $conky_path/main
unlink $qtile_path/color.py

#Kills current conky
killall conky

#Link the new theme to my main theme in conky
ln -s $conky_path/$choice.conkyrc $conky_path/main

#Starts conky again
conky -c $conky_path/main

#Links the new kitty theme
ln -s $kitty_path/kitty-themes/themes/$make_capital.conf $kitty_path/theme.conf 

#Update my qtile colorscheme 
#sed -i "s|$current_qtile_theme|$choice|g" $qtile_path/config.py
ln -s $qtile_path/themes/$choice.py $qtile_path/color.py



